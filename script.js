document.addEventListener('DOMContentLoaded', function () {
    const contentContainer = document.querySelector('.content-container');
    const buttons = document.querySelectorAll('.btn-content');

    contentContainer.innerHTML = `<p>${buttons[0].getAttribute('data-content')}</p>`;

    buttons.forEach(button => {
        button.addEventListener('click', function () {
            const content = this.getAttribute('data-content');
            contentContainer.innerHTML = `<p>${content}</p>`;
        });
    });
});

        // –õ–æ–≥—ñ–∫–∞ –≥—Ä–∏ –≤ –∑–º—ñ–π–∫—É
        const snakeGameContainer = document.getElementById('snakeGame');
        const winMessageContainer = document.getElementById('winMessage');
        let snakeLength = 1;
        let snakeDirection = 'right';
        let snake = [{ x: 0, y: 0 }];
        let food = generateFood();
        let gameWon = false;

        function generateFood() {
            const x = Math.floor(Math.random() * 12) * 20;
            const y = Math.floor(Math.random() * 6) * 20;
            return { x, y };
        }

        function updateGame() {
            if (gameWon) {
                return;
            }

            const head = { ...snake[0] };
            switch (snakeDirection) {
                case 'up':
                    head.y = (head.y - 20 + 120) % 120;
                    break;
                case 'down':
                    head.y = (head.y + 20) % 120;
                    break;
                case 'left':
                    head.x = (head.x - 20 + 240) % 240;
                    break;
                case 'right':
                    head.x = (head.x + 20) % 240;
                    break;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∑—ñ—Ç–∫–Ω–µ–Ω–Ω—è –∑ —Å–∞–º–∏–º —Å–æ–±–æ—é
            for (let i = 1; i < snake.length; i++) {
                if (head.x === snake[i].x && head.y === snake[i].y) {
                    endGame(false);
                    return;
                }
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∑'—ó–¥–∞–Ω–Ω—è —ó–∂—ñ
            if (head.x === food.x && head.y === food.y) {
                snakeLength++;
                food = generateFood();
            } else {
                snake.pop();
            }

            snake.unshift(head);
            drawGame();
        }

        function drawGame() {
            snakeGameContainer.innerHTML = '';
            snake.forEach(segment => {
                const snakeSegment = document.createElement('div');
                snakeSegment.className = 'snake-body';
                snakeSegment.style.width = '20px';
                snakeSegment.style.height = '20px';
                snakeSegment.style.left = `${segment.x}px`;
                snakeSegment.style.top = `${segment.y}px`;
                snakeGameContainer.appendChild(snakeSegment);
            });

            const foodElement = document.createElement('div');
            foodElement.className = 'food';
            foodElement.style.width = '20px';
            foodElement.style.height = '20px';
            foodElement.style.left = `${food.x}px`;
            foodElement.style.top = `${food.y}px`;
            snakeGameContainer.appendChild(foodElement);

            if (snake.length === 72) {
                gameWon = true;
                endGame(true);
            }
        }

        function endGame(isWinner) {
            if (isWinner) {
                winMessageContainer.textContent = '–¢–∏ –≤–∏–≥—Ä–∞–ª–∞! –û—Å—å –º–æ—ó –ø–æ–±–∞–∂–∞–Ω–Ω—è:';
                showContent();
            } else {
                winMessageContainer.textContent = '–ì—Ä–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!';
            }
        }

        function showContent() {
            const contentContainer = document.getElementById('contentContainer');
            contentContainer.innerHTML = `
                <p> –î–æ—Ä–æ–≥–∞ –ü–æ–ª—ñ–Ω–∞,

                –ó –Ω–∞—Å—Ç—É–ø–∞—é—á–∏–º –ù–æ–≤–∏–º –†–æ–∫–æ–º 2024! üéâ –ù–µ—Ö–∞–π —Ü–µ–π —Ä—ñ–∫ –ø—Ä–∏–Ω–µ—Å–µ –Ω–∞–º —É—Å—ñ–º –±–µ–∑–ª—ñ—á —Ä–∞–¥–æ—Å—Ç—ñ, –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏—Ö –º–æ–º–µ–Ω—Ç—ñ–≤ —Ç–∞ –Ω–æ–≤–∏—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π. –î–æ—Ä–µ—á—ñ, –ø–∏—à–∏ —Ü–µ –¥–æ –ù–æ–≤–æ–≥–æ –†–æ–∫—É (31.12.2023)
                
                –ë–∞–∂–∞—é —Ç–æ–±—ñ –º–æ—Ä–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –µ–º–æ—Ü—ñ–π, –≤–µ–ª–∏–∫–∏—Ö –¥–æ—Å—è–≥–Ω–µ–Ω—å —ñ –±—É–¥–∏ —â–∞—Å–ª–∏–≤–æ—é. –ù–µ—Ö–∞–π –∫–æ–∂–µ–Ω –¥–µ–Ω—å –±—É–¥–µ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π —Å–º—ñ—Ö–æ–º —Ç–∞ —Ä–∞–¥—ñ—Å—Ç—é, –∞ –≤–µ—Å—å —Ä—ñ–∫ –ø—Ä–∏–Ω–µ—Å–µ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ –≤—Ä–∞–∂–µ–Ω–Ω—è.
                
                –ë–∞–∂–∞—é —â–æ–± —Ç–∏ –±—É–ª–∞ —â–∞—Å–ª–∏–≤–∞, —ñ —Ç–≤–æ—ó –º—Ä—ñ—ó –∑–±—É–≤–∞–ª–∏—Å—è!
                
                –ó –ù–æ–≤–∏–º –†–æ–∫–æ–º, –ø–æ–¥—Ä—É–≥–∞! üåü –ù–µ—Ö–∞–π —Ü—è –ø–æ—Ä–∞ —Å–≤—è—Ç–∫–æ–≤–∏—Ö –≤—Ä–∞–∂–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ –Ω–∞–º –±–µ–∑–ª—ñ—á –Ω–µ–∑–∞–±—É—Ç–Ω—ñ—Ö –º–æ–º–µ–Ω—Ç—ñ–≤ —Ä–∞–∑–æ–º.
                
                –í—ñ–¥
                –ê—Ä—Ç–µ–º–∞ (–Ω–µ –≥—É–ª—è) üåü </p>
            <p>üåü –ë–∞–∂–∞—é —â–æ–± —Ç–∏ –±—É–ª–∞ —â–∞—Å–ª–∏–≤–∞ —É —Å–≤–æ—î–º—É –∂–∏—Ç—Ç—ñ.</p>
            `;
            contentContainer.style.display = 'block';
        }

        function handleKeyPress(event) {
            if (gameWon) {
                return;
            }

            switch (event.key) {
                case 'ArrowUp':
                    if (snakeDirection !== 'down') {
                        snakeDirection = 'up';
                    }
                    break;
                case 'ArrowDown':
                    if (snakeDirection !== 'up') {
                        snakeDirection = 'down';
                    }
                    break;
                case 'ArrowLeft':
                    if (snakeDirection !== 'right') {
                        snakeDirection = 'left';
                    }
                    break;
                case 'ArrowRight':
                    if (snakeDirection !== 'left') {
                        snakeDirection = 'right';
                    }
                    break;
            }
        }

        // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª–∞–≤—ñ—à –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–º—ñ–π–∫–æ—é
        document.addEventListener('keydown', handleKeyPress);

        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∏ –∫–æ–∂–Ω—ñ 200 –º—Å
        setInterval(updateGame, 200);

        // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É –≥—Ä–∏
        function skipGame() {
            gameWon = true;
            endGame(true);
        }

document.addEventListener('DOMContentLoaded', function () {
            animateSnowfall();
        });
        
        function animateSnowfall() {
            const snowflakesContainer = document.body;
        
            for (let i = 0; i < 50; i++) {
                const snowflake = document.createElement('div');
                snowflake.className = 'snowflake';
                snowflake.style.left = `${Math.random() * window.innerWidth}px`;
                snowflake.style.animationDelay = `${Math.random() * 5}s`;
                snowflakesContainer.appendChild(snowflake);
            }
        }
        